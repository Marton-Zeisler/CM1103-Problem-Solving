{\rtf1\ansi\ansicpg1252\cocoartf1671\cocoasubrtf100
{\fonttbl\f0\fswiss\fcharset0 Helvetica-Bold;\f1\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;\red63\green105\blue30;}
{\*\expandedcolortbl;;\cssrgb\c30831\c47797\c15540;}
\paperw11900\paperh16840\margl1440\margr1440\vieww14200\viewh15560\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\b\fs24 \cf0 Maths:\

\f1\b0 \cf2  - Logic\
 - Sets\
 - Proofs\
 - Counting\
 - Probability\
\cf0 \
\

\f0\b \cf2 Easter -> Wednesday\

\f1\b0 \cf0 ------\
\
May be on exam:\
\
Definitions (e.g. algorithm, etc.)\
Operator precedence (see past paper multiple choice examples)\
Writing simple functions in Python (e.g. 3-4 lines, simple calculations)\
Program control structures in Python\
\
Definitely not:\
\
Easter algorithm\
Doctests\
Finding square roots\
\
\

\f0\b \cf2 Recursion -> Thursday\

\f1\b0 \cf0 ---------\
\
May be on exam:\
\
Fibonacci sequence & recursive solution\
Definitions\
Idea behind proof by induction & relationship to recursion - you won't have to prove anything by induction on your own, but you may be guided through the steps\
GCD and recursive algorithm\
When to use or not use recursion\
Be prepared to sketch a recursive solution for a previously unseen problem
\f0\b \

\f1\b0 \
Definitely not:\
\
Derivation of Fibonacci sequence\
Iterative algorithm for Fibonacci\
Analytic formula for Fibonacci\
Proof of sum of first n numbers\
Golden ratio\
Cassini's identity\
The link between Fibonacci & GCD\
Tower of Hanoi\
\

\f0\b \cf2 Searching -> Friday\

\f1\b0 \cf0 ---------\
\
May be on exam:\
\
Linear and sorted linear search algorithms\
Calculating expected values\
Average vs worst case performance\
Successful vs unsuccessful performance\
Binary search algorithm <- remember the list needs to be sorted\
Counting the number of comparisons in linear & binary search to measure performance\
Compare performance of SCAN & STOR algorithms (but no need to learn the algorithms themselves)\
\
Definitely not:\
\
Drug testing example\
Law of large numbers\
Ternary or interpolated search (but useful examples to think about changing performance)\
Reservoir sampling\
\
}